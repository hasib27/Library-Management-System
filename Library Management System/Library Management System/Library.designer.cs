#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Library_Management_System
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="library")]
	public partial class LibraryDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCredential(Credential instance);
    partial void UpdateCredential(Credential instance);
    partial void DeleteCredential(Credential instance);
    partial void InsertBook(Book instance);
    partial void UpdateBook(Book instance);
    partial void DeleteBook(Book instance);
    partial void InsertBorrow(Borrow instance);
    partial void UpdateBorrow(Borrow instance);
    partial void DeleteBorrow(Borrow instance);
    #endregion
		
		public LibraryDataContext() : 
				base(global::Library_Management_System.Properties.Settings.Default.libraryConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LibraryDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LibraryDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LibraryDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LibraryDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Credential> Credentials
		{
			get
			{
				return this.GetTable<Credential>();
			}
		}
		
		public System.Data.Linq.Table<Book> Books
		{
			get
			{
				return this.GetTable<Book>();
			}
		}
		
		public System.Data.Linq.Table<Borrow> Borrows
		{
			get
			{
				return this.GetTable<Borrow>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CREDENTIAL")]
	public partial class Credential : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PASS;
		
		private string _ROLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPASSChanging(string value);
    partial void OnPASSChanged();
    partial void OnROLEChanging(string value);
    partial void OnROLEChanged();
    #endregion
		
		public Credential()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50)", IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASS", DbType="VarChar(50)")]
		public string PASS
		{
			get
			{
				return this._PASS;
			}
			set
			{
				if ((this._PASS != value))
				{
					this.OnPASSChanging(value);
					this.SendPropertyChanging();
					this._PASS = value;
					this.SendPropertyChanged("PASS");
					this.OnPASSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE", DbType="VarChar(50)")]
		public string ROLE
		{
			get
			{
				return this._ROLE;
			}
			set
			{
				if ((this._ROLE != value))
				{
					this.OnROLEChanging(value);
					this.SendPropertyChanging();
					this._ROLE = value;
					this.SendPropertyChanged("ROLE");
					this.OnROLEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BOOK")]
	public partial class Book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _B_ID;
		
		private string _B_NAME;
		
		private string _TOPIC;
		
		private System.Nullable<int> _T_QTY;
		
		private System.Nullable<int> _A_QTY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnB_IDChanging(string value);
    partial void OnB_IDChanged();
    partial void OnB_NAMEChanging(string value);
    partial void OnB_NAMEChanged();
    partial void OnTOPICChanging(string value);
    partial void OnTOPICChanged();
    partial void OnT_QTYChanging(System.Nullable<int> value);
    partial void OnT_QTYChanged();
    partial void OnA_QTYChanging(System.Nullable<int> value);
    partial void OnA_QTYChanged();
    #endregion
		
		public Book()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_ID", DbType="VarChar(50)", IsPrimaryKey=true)]
		public string B_ID
		{
			get
			{
				return this._B_ID;
			}
			set
			{
				if ((this._B_ID != value))
				{
					this.OnB_IDChanging(value);
					this.SendPropertyChanging();
					this._B_ID = value;
					this.SendPropertyChanged("B_ID");
					this.OnB_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_NAME", DbType="VarChar(50)")]
		public string B_NAME
		{
			get
			{
				return this._B_NAME;
			}
			set
			{
				if ((this._B_NAME != value))
				{
					this.OnB_NAMEChanging(value);
					this.SendPropertyChanging();
					this._B_NAME = value;
					this.SendPropertyChanged("B_NAME");
					this.OnB_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOPIC", DbType="VarChar(50)")]
		public string TOPIC
		{
			get
			{
				return this._TOPIC;
			}
			set
			{
				if ((this._TOPIC != value))
				{
					this.OnTOPICChanging(value);
					this.SendPropertyChanging();
					this._TOPIC = value;
					this.SendPropertyChanged("TOPIC");
					this.OnTOPICChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_QTY", DbType="Int")]
		public System.Nullable<int> T_QTY
		{
			get
			{
				return this._T_QTY;
			}
			set
			{
				if ((this._T_QTY != value))
				{
					this.OnT_QTYChanging(value);
					this.SendPropertyChanging();
					this._T_QTY = value;
					this.SendPropertyChanged("T_QTY");
					this.OnT_QTYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_QTY", DbType="Int")]
		public System.Nullable<int> A_QTY
		{
			get
			{
				return this._A_QTY;
			}
			set
			{
				if ((this._A_QTY != value))
				{
					this.OnA_QTYChanging(value);
					this.SendPropertyChanging();
					this._A_QTY = value;
					this.SendPropertyChanged("A_QTY");
					this.OnA_QTYChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BORROW")]
	public partial class Borrow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _B_ID;
		
		private string _B_NAME;
		
		private string _TOPIC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnB_IDChanging(string value);
    partial void OnB_IDChanged();
    partial void OnB_NAMEChanging(string value);
    partial void OnB_NAMEChanged();
    partial void OnTOPICChanging(string value);
    partial void OnTOPICChanged();
    #endregion
		
		public Borrow()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50)", IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_ID", DbType="VarChar(50)")]
		public string B_ID
		{
			get
			{
				return this._B_ID;
			}
			set
			{
				if ((this._B_ID != value))
				{
					this.OnB_IDChanging(value);
					this.SendPropertyChanging();
					this._B_ID = value;
					this.SendPropertyChanged("B_ID");
					this.OnB_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_NAME", DbType="VarChar(50)")]
		public string B_NAME
		{
			get
			{
				return this._B_NAME;
			}
			set
			{
				if ((this._B_NAME != value))
				{
					this.OnB_NAMEChanging(value);
					this.SendPropertyChanging();
					this._B_NAME = value;
					this.SendPropertyChanged("B_NAME");
					this.OnB_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOPIC", DbType="VarChar(50)")]
		public string TOPIC
		{
			get
			{
				return this._TOPIC;
			}
			set
			{
				if ((this._TOPIC != value))
				{
					this.OnTOPICChanging(value);
					this.SendPropertyChanging();
					this._TOPIC = value;
					this.SendPropertyChanged("TOPIC");
					this.OnTOPICChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
